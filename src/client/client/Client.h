// Generated by dia2code
#ifndef CLIENT__CLIENT__H
#define CLIENT__CLIENT__H

#include <thread>
#include <string>

namespace engine {
  class Engine;
};
namespace ai {
  class HeuristicAI;
};
namespace render {
  class Scene;
}

#include "render/Scene.h"
#include "ai/HeuristicAI.h"
#include "engine/Engine.h"

namespace client {

  /// class Client - 
  class Client {
    // Associations
    // Attributes
  private:
    engine::Engine* engine;
    ai::HeuristicAI* ai;
    std::thread t1;
    std::thread t2;
    bool newAICommand     = false;
    bool replay     = false;
    // Operations
  public:
    Client ();
    Client (engine::Engine* engine, ai::HeuristicAI* ai);
    Client (engine::Engine* engine, ai::HeuristicAI* ai, bool replay);
    ~Client ();
    void UpdateEngine ();
    void CommandsAI_h ();
    void getCommandsAI_h_Id (std::string action);
    void run ();
    void end ();
    // Setters and Getters
  };

};

#endif
