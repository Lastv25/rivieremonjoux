// Generated by dia2code
#ifndef SERVER__USERDB__H
#define SERVER__USERDB__H

#include <map>
#include <memory>
#include <vector>

namespace server {
  class User;
}

#include "User.h"

namespace server {

  /// class UserDB - 
  class UserDB {
    // Associations
    // Attributes
  protected:
    int idseq;
    std::map<int,std::unique_ptr<User> > users;
    int maxPlayers     = 2;
    // Operations
  public:
    UserDB ();
    const User* getUser (int id) const;
    const std::vector<User*> getAllUser () const;
    int addUser (std::unique_ptr<User> user);
    void setUser (int id, std::unique_ptr<User> user);
    void removeUser (int id);
    // Setters and Getters
    int getIdseq() const;
    void setIdseq(int idseq);
    const std::map<int,std::unique_ptr<User> >& getUsers() const;
    void setUsers(const std::map<int,std::unique_ptr<User> >& users);
    int getMaxPlayers() const;
    void setMaxPlayers(int maxPlayers);
  };

};

#endif
