// Generated by dia2code
#ifndef AI__DEEPAI__H
#define AI__DEEPAI__H

#include <vector>
#include <memory>
#include <string>

namespace state {
  class State;
};
namespace ai {
  class Strategy;
  class Noeud;
  class AI;
};
namespace state {
  class Character;
  class Room;
}

#include "AI.h"
#include "state/Character.h"
#include "Noeud.h"
#include "Strategy.h"
#include "state/Room.h"

namespace ai {

  /// class DeepAI - 
  class DeepAI : public ai::AI {
    // Associations
    // Attributes
  public:
    std::vector<std::vector<std::shared_ptr<Noeud>>> arbre;
    std::vector<std::string> tasks;
    std::pair<int,std::string> bestScore;
    // Operations
  public:
    std::vector<std::string> run (std::vector<std::string>& list);
    DeepAI ();
    DeepAI (state::State* state);
    ~DeepAI ();
    int calcScore (Strategy* stretegy);
    int minmaxArbre (Noeud* noeud, int etageMax);
    // Setters and Getters
  };

};

#endif
